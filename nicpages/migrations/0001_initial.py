# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-25 10:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import nicpages.blocks
import wagtail.contrib.table_block.blocks
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtaildocs.blocks
import wagtail.wagtailembeds.blocks
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtaildocs', '0007_merge'),
        ('taggit', '0002_auto_20150616_2121'),
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
        ('wagtailimages', '0018_remove_rendition_filter'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('body', wagtail.wagtailcore.fields.StreamField([(b'h1', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'h2', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'h3', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'h4', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'h5', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'centre_heading', nicpages.blocks.CentreAlignHeadingBlock()), (b'headline', nicpages.blocks.HeadlineBlock()), (b'paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), (b'video', nicpages.blocks.VideoBlock(icon=b'media')), (b'home_video', nicpages.blocks.VideoBlock(icon=b'media'))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogIndexPageRelatedLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('title', models.CharField(help_text='Link title', max_length=255)),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField([(b'h2', wagtail.wagtailcore.blocks.CharBlock(classname=b'title', icon=b'title')), (b'h3', wagtail.wagtailcore.blocks.CharBlock(classname=b'title', icon=b'title')), (b'h4', wagtail.wagtailcore.blocks.CharBlock(classname=b'title', icon=b'title')), (b'intro', wagtail.wagtailcore.blocks.RichTextBlock(icon=b'pilcrow')), (b'paragraph', wagtail.wagtailcore.blocks.RichTextBlock(icon=b'pilcrow')), (b'aligned_image', wagtail.wagtailcore.blocks.StructBlock([(b'image', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'caption', wagtail.wagtailcore.blocks.RichTextBlock()), (b'alignment', nicpages.blocks.ImageFormatChoiceBlock())], icon=b'image', label=b'Aligned image')), (b'pullquote', wagtail.wagtailcore.blocks.StructBlock([(b'quote', wagtail.wagtailcore.blocks.TextBlock(b'quote title')), (b'attribution', wagtail.wagtailcore.blocks.CharBlock())])), (b'aligned_html', wagtail.wagtailcore.blocks.StructBlock([(b'html', wagtail.wagtailcore.blocks.RawHTMLBlock()), (b'alignment', nicpages.blocks.HTMLAlignmentChoiceBlock())], icon=b'code', label=b'Raw HTML')), (b'document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon=b'doc-full-inverse')), (b'doc_with_preview', wagtail.wagtailcore.blocks.StructBlock([(b'preview', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'doc', wagtail.wagtaildocs.blocks.DocumentChooserBlock())]))])),
                ('date', models.DateField(verbose_name='Post date')),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPageCarouselItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('embed_url', models.URLField(blank=True, verbose_name='Embed URL')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPageRelatedLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('title', models.CharField(help_text='Link title', max_length=255)),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='nicpages.BlogPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nicpages_blogpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NicPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField([(b'h1', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'h2', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'h3', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'h4', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'h5', wagtail.wagtailcore.blocks.CharBlock(icon=b'title')), (b'headline', nicpages.blocks.HeadlineBlock()), (b'centre_heading', nicpages.blocks.CentreAlignHeadingBlock()), (b'paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), (b'image', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'image_responsive', wagtail.wagtailcore.blocks.StructBlock([(b'image', wagtail.wagtailimages.blocks.ImageChooserBlock())])), (b'doc_with_preview', wagtail.wagtailcore.blocks.StructBlock([(b'preview', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'doc', wagtail.wagtaildocs.blocks.DocumentChooserBlock())])), (b'home_video', nicpages.blocks.HomePageVideoBlock(icon=b'media')), (b'equipment_banner_row', wagtail.wagtailcore.blocks.StructBlock([(b'first_image', wagtail.wagtailcore.blocks.StructBlock([(b'title', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'image', wagtail.wagtailimages.blocks.ImageChooserBlock(required=False)), (b'page', wagtail.wagtailcore.blocks.PageChooserBlock(required=False)), (b'external_link', wagtail.wagtailcore.blocks.URLBlock(required=False))])), (b'second_image', wagtail.wagtailcore.blocks.StructBlock([(b'title', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'image', wagtail.wagtailimages.blocks.ImageChooserBlock(required=False)), (b'page', wagtail.wagtailcore.blocks.PageChooserBlock(required=False)), (b'external_link', wagtail.wagtailcore.blocks.URLBlock(required=False))]))])), (b'google_map', wagtail.wagtailcore.blocks.StructBlock([(b'title', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'street', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'postcode', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'city', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_long', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_lat', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_zoom_level', wagtail.wagtailcore.blocks.CharBlock(default=14, max_length=3, required=True)), (b'width', wagtail.wagtailcore.blocks.IntegerBlock(required=True)), (b'height', wagtail.wagtailcore.blocks.IntegerBlock(required=True))])), (b'two_columns', wagtail.wagtailcore.blocks.StructBlock([(b'left_column', wagtail.wagtailcore.blocks.StreamBlock([(b'heading', wagtail.wagtailcore.blocks.CharBlock(classname=b'full title')), (b'paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), (b'image', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), (b'google_map', wagtail.wagtailcore.blocks.StructBlock([(b'title', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'street', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'postcode', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'city', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_long', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_lat', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_zoom_level', wagtail.wagtailcore.blocks.CharBlock(default=14, max_length=3, required=True)), (b'width', wagtail.wagtailcore.blocks.IntegerBlock(required=True)), (b'height', wagtail.wagtailcore.blocks.IntegerBlock(required=True))]))], icon=b'arrow-left', label=b'Left column content')), (b'right_column', wagtail.wagtailcore.blocks.StreamBlock([(b'heading', wagtail.wagtailcore.blocks.CharBlock(classname=b'full title')), (b'paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), (b'image', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), (b'google_map', wagtail.wagtailcore.blocks.StructBlock([(b'title', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'street', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'postcode', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'city', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_long', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_lat', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=True)), (b'map_zoom_level', wagtail.wagtailcore.blocks.CharBlock(default=14, max_length=3, required=True)), (b'width', wagtail.wagtailcore.blocks.IntegerBlock(required=True)), (b'height', wagtail.wagtailcore.blocks.IntegerBlock(required=True))]))], icon=b'arrow-right', label=b'Right column content'))])), (b'image_gallery', wagtail.wagtailcore.blocks.StreamBlock([(b'image', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'caption', wagtail.wagtailcore.blocks.CharBlock())])), (b'table', wagtail.contrib.table_block.blocks.TableBlock(table_options={b'colHeaders': True, b'editor': b'text', b'rowHeaders': False, b'stretchH': b'all'}))], blank=True, null=True)),
                ('main_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='blogpagerelatedlink',
            name='link_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='blogpagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_links', to='nicpages.BlogPage'),
        ),
        migrations.AddField(
            model_name='blogpagecarouselitem',
            name='link_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='blogpagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='carousel_items', to='nicpages.BlogPage'),
        ),
        migrations.AddField(
            model_name='blogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='nicpages.BlogPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='blogindexpagerelatedlink',
            name='link_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='blogindexpagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_links', to='nicpages.BlogIndexPage'),
        ),
    ]
